Cinema E-Booking System
Problem Statement
The Cinema E-Booking System is a web-based application designed to facilitate online movie ticket booking, providing users with information on movies, showtimes, and allowing them to book and pay for their tickets online. The system also allows administrators to manage movies, ticket prices, and user information effectively.

Key Features
User Functionality:
View Movie Information: Users can browse details for thousands of movies, including show times, trailers, synopsis, cast, and reviews.
Online Booking & Payment: Users can select seats, book tickets for their chosen movie, and pay securely online.
Print/Save Tickets: After payment, users can save or print their e-tickets.
Registration & Account Management: Users can register an account, verify their email, and manage their profile and payment information.
Search & Filter: Users can search and filter movies by category, title, or show date, with an easy booking facility available on all relevant screens.
Order History & Refunds: Users can view their order history and request ticket returns for a refund up to 60 minutes before showtime.
Administrator Functionality:
Movie & Pricing Management: Admins can add, update, or delete movie details, set ticket prices by age category, and manage promotions.
User Management: Admins can update user information, add new administrators, and suspend user accounts if necessary.
Real-Time Statistics & Reports: Admins can view real-time booking and sales data to monitor performance.
Age-Based Ticket Pricing:
Child, Adult, and Senior: Ticket prices are adjusted based on the age category of the ticket owner.
Development Process
Process Model
The system is developed using a hybrid process model combining Waterfall and Agile methodologies:

Waterfall is applied for overall project planning, phase-setting, and deliverable tracking.
Agile practices are used within each phase for flexible and iterative development, with coding divided into sprints for incremental progress.
UI & Prototyping
Early prototyping will be used to design and gather feedback on the UI, ensuring a user-friendly experience and reducing the risk of failure or dissatisfaction.

Testing & Quality Assurance
Once implemented, the system will undergo extensive testing:

Subsystem Testing: Validate individual components.
Integration Testing: Ensure different parts work together seamlessly.
Acceptance Testing: Confirm the system meets all user requirements.
High-Level System Requirements
Movie Management:

Admins can add/update movie details (title, category, cast, etc.) and show times.
Admins can delete movies and manage promotional content.
Ticket Management:

Age-based pricing (Child, Adult, Senior) with online booking fees and promotions.
Users select tickets based on movie, show date, time, and seats.
User Management:

Users register with personal and payment details (secured via email verification).
Users can manage their profile, view order history, and subscribe/unsubscribe from promotions.
Secure password recovery for registered users.
Search & Booking:

Browse Facility: Home page filters "Now Playing" and "Coming Soon" movies.
Search & Filter: Users can search movies by category, title, and show dates.
Seat Selection: Users can graphically select seats in the hall.
Payment & Confirmation: Secure checkout with promotion code usage and booking confirmation sent via email.
Reports & Analytics:

Admins can generate predefined reports on sales and show statistics.
The system supports multi-user access with appropriate authorization levels.
Technical Specifications:

Persistent Data Store: Use of MongoDB for database storage.
Standards: Web technologies including HTML, CSS, JavaScript, React.js, and Express for backend functionality.
Platform Accessibility: Accessible via major browsers (Chrome, Firefox, Safari, etc.).
Development Tools & Technologies
Frontend: React.js for UI/UX design and implementation.
Backend: Express.js as a framework for building RESTful APIs to handle data and business logic.
Database: MongoDB as the NoSQL database for data persistence.
Authentication: Secure user login and registration process using JWT or similar authentication methods.
Payment Gateway: Integration for secure online payments.
Development Milestones
Requirement Gathering & Planning: Finalize requirements and set project timelines.
Prototyping & Design: Develop UI prototypes and refine based on feedback.
Development Phases (Sprints): Implement core features iteratively, including front-end (React.js) and back-end (Express & MongoDB).
Testing & QA: Perform subsystem, integration, and acceptance testing to ensure quality.
Final Deployment & Demonstration: Finalize and deploy the system, followed by a live demonstration.
Conclusion
The Cinema E-Booking System aims to provide a comprehensive and seamless experience for users to book movie tickets online, and for administrators to manage cinema operations efficiently. Combining the flexibility of Agile and structured planning of Waterfall, the project is built to be robust, secure, and user-friendly.

Note: All project deliverables and deadlines are listed on the assignment page on eLC. The final project demonstration is scheduled for Tuesday, 11/30/2022.

References
MPAA-US film rating code and age-based ticket categorization.
Secure standards for web development and user authentication practices.
This README provides an overview of the Cinema E-Booking System project, its features, development process, and key requirements. For further details or to contribute to the project, please reach out to the project maintainers.











